// output of ./demo/comb/lyndon-words-demo.cc:
// Description:
//% All Lyndon words up to length n.  Duval's algorithm.

arg 1: 7 == n  [Lyndon words up to length n]  default=7
arg 2: 0 == a  [First letter in the alphabet]  default=0
arg 3: 1 == z  [Last letter in the alphabet]  default=1
arg 4: 0 == q  [0 ==> show all, 1 ==> only necklaces, 2 ==> only Lyndon words]  default=0
   1:  0
   2:  0 0 0 0 0 0 1
   3:  0 0 0 0 0 1
   4:  0 0 0 0 0 1 1
   5:  0 0 0 0 1
   6:  0 0 0 0 1 0 1
   7:  0 0 0 0 1 1
   8:  0 0 0 0 1 1 1
   9:  0 0 0 1
  10:  0 0 0 1 0 0 1
  11:  0 0 0 1 0 1
  12:  0 0 0 1 0 1 1
  13:  0 0 0 1 1
  14:  0 0 0 1 1 0 1
  15:  0 0 0 1 1 1
  16:  0 0 0 1 1 1 1
  17:  0 0 1
  18:  0 0 1 0 0 1 1
  19:  0 0 1 0 1
  20:  0 0 1 0 1 0 1
  21:  0 0 1 0 1 1
  22:  0 0 1 0 1 1 1
  23:  0 0 1 1
  24:  0 0 1 1 0 1
  25:  0 0 1 1 0 1 1
  26:  0 0 1 1 1
  27:  0 0 1 1 1 0 1
  28:  0 0 1 1 1 1
  29:  0 0 1 1 1 1 1
  30:  0 1
  31:  0 1 0 1 0 1 1
  32:  0 1 0 1 1
  33:  0 1 0 1 1 1
  34:  0 1 0 1 1 1 1
  35:  0 1 1
  36:  0 1 1 0 1 1 1
  37:  0 1 1 1
  38:  0 1 1 1 1
  39:  0 1 1 1 1 1
  40:  0 1 1 1 1 1 1
  41:  1
 ct = 41
